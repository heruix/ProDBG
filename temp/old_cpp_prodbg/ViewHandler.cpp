#include "ViewHandler.h"
#include "View.h"
#include <QDebug>
#include <QMainWindow>

namespace prodbg {

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ViewHandler::ViewHandler(QObject* parent) : QObject(parent)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ViewHandler::~ViewHandler()
{
    writeSettings();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void ViewHandler::readSettings(QMainWindow* window)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
void ViewHandler::destroyedView(QObject* object)
{
    printf("destroyedView\n");
    for (int i = 0; i < m_views.count(); ++i) {
        if (m_views[i] == object) {
            printf("removed view\n");
            m_views.remove(i);
            break;
        }
    }
}
*/

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void ViewHandler::addView(View* view)
{
    m_views.append(view);
    //connect(view, &QObject::destroyed, this, &ViewHandler::destroyedView);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void ViewHandler::writeSettings()
{
    /*
    QSettings settings(QStringLiteral("TBL"), QStringLiteral("ProDBG"));
    settings.beginGroup(QStringLiteral("MainWindow"));
    */

    for (auto& view : m_views) {
        qDebug() << "view type " << view->metaObject()->className();
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
